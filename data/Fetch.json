{"securityId":"aidevsuite_a1b2c3","name":"Fetch","code":"// Show Proxy checkbox\nconst proxyLabel = createParagraph(\"Use Proxy\", {\n    title: \"Routes request over https://corsproxy.io.\"\n});\nconst proxyInput = createInput(checkboxInputType, { defaultValue: true });\nawait show(createHorizontalList([proxyLabel, proxyInput]), { noAccept: true });\n\n// Show URL input\nconst urlInput = createInput(textInputType, { placeholder: \"Enter URL here...\" });\nawait show(urlInput, { noAccept: true }); // Disable accepting input, so we can use our own fetch button.\n\nawait show(createBreak()); // Show break to create a strong visual separation\n// Show hidden text element for later use\nconst resultTarget = createText(paragraphType, \"\", { bordered: true, placeholder: \"Fetched text will be shown here...\" });\nawait show(resultTarget);\n\n// Define the function to fetch URL and show result\nasync function fetchUrl() {\n    let text;\n    try {\n        // Get URL from user input\n        let url = (await read(urlInput.id)).text;\n        const useProxy = (await read(proxyInput.id)).checked;\n\n        // Use proxy if desired\n        if (useProxy) {\n            url = 'https://corsproxy.io/?' + encodeURIComponent(url);\n        }\n\n        const response = await fetch(url); // Fetch the URL\n        text = await response.text(); // Get text content from response\n    } catch (error) {\n        text = \"Error: \" + error.message; // Set text to error message\n    }\n\n    await update(resultTarget.id, { text }); // Update text element and make it visible\n}\n\n// Show fetch button\nconst fetchButton = createButton(createText(paragraphType, \"Fetch URL\"), fetchUrl);\nconst fetchButtonWrapper = createFloatRightWrapper(fetchButton);\nawait show(fetchButtonWrapper, { insertAfter: urlInput.id }); // Show button after url input\n\nawait forever();","link":"fetch"}