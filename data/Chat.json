{"securityId":"aidevsuite_a1b2c3","code":"const promptInputName = \"promptInputName\"; // Define name of prompt input for easy reference\nconst context = []; // Define context to pass to chatbot\n\nasync function run() { // Define run function to be called on chat button click\n    const prompt = (await read(promptInputName)).text; // Read text value of prompt input\n    context.push(toUserMessage(prompt)); // Add user prompt to chat context\n\n    const userMessageElement = createText(paragraphType, `User:\\n${prompt}`, {bordered: true}); // Add border to user message to make it easier for the user to see in the sea of messages\n    const assistantMessageElement = createMarkdown(\"\", {name: context.length}); // Show assistant message in markdown to make it more appealing\n    await showGroup([userMessageElement, assistantMessageElement], {insertBefore: promptInputName, name: context.length}); // Insert with name equal to context length for later reference, and before prompt input, as that should stay at the bottom.\n\n    const result = await chat(context, {element: counter}); // We chat and stream to the element with name equal to context length\n    context.push(toAssistantMessage(result)); // Save assistant response to chat context\n}\n\nawait setStatus(\"Ready to chat\"); // Set status as flavor\n    // Show input box for the user to enter their prompt\nconst inputElement = createInput(textInputType, { // Add text input to allow user to input their prompt\n    name: promptInputName, // Add name for later reference\n    placeholder: \"Enter your prompt here...\", // Add placeholder to better communicate with the user\n});\nawait show(inputElement, {noAccept: true}); // Show the input without an accept button, so we can reuse it.\nconst button = createContainer(buttonType, createText(paragraphType, \"Chat\"), {onClick:run}); // Button that calls run() on click\nconst wrapper = createFloatRightWrapper(button); // Make chat button float to the right\nawait show(wrapper); // Show the button\n// Continues to run in the background until the script finishes running. To stop the script from finishing, await `forever` at the end of your script.\n\nawait forever(); // Never finish the script","link":"chat","name":"Chat"}