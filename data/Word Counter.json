{"securityId":"aidevsuite_a1b2c3","name":"Word Counter","code":"// Function to update the counters including reading duration\nfunction updateCounters(input, allInputs) {\n    const text = input.text;\n    const characterCount = text.length;\n    const wordCount = text.trim().split(/\\s+/).filter(Boolean).length;\n    const lineCount = text.split(/\\r?\\n/).length;\n    const readingSpeed = 238; // average reading speed in words per minute\n    const readingDuration = wordCount / readingSpeed; // in minutes\n    let minutes = Math.floor(readingDuration);\n    let seconds = Math.round((readingDuration % 1) * 60);\n    let hours = Math.floor(minutes / 60);\n    minutes = minutes % 60;\n    let days = Math.floor(hours / 24);\n    hours = hours % 24;\n    let formattedReadingDuration = `${minutes}m ${seconds}s`;\n    if (days != 0 || hours != 0) formattedReadingDuration = `${hours}h ${formattedReadingDuration}`;\n    if (days != 0) formattedReadingDuration = `${hours}h ${formattedReadingDuration}`;\n\n    return { characterCount, wordCount, lineCount, formattedReadingDuration };\n}\n\n// Create text input field\nconst textInput = createInput(textInputType, {\n    placeholder: \"Enter text here...\",\n    onValidate: (input, allInputs) => {\n        const counters = updateCounters(input, allInputs);\n        update(infoElement.id, {\n            text: `Characters: ${counters.characterCount}, Words: ${counters.wordCount}, Lines: ${counters.lineCount}, Reading Duration: ${counters.formattedReadingDuration}`\n        });\n    }\n});\n\n// Create info element to display the counters\nconst infoElement = createInfo(\"Characters: 0, Words: 0, Lines: 0, Reading Duration: 0m 0s\");\n\n// Show the text input field and info element with noAccept option\nawait show(createGroup([textInput, infoElement]), { noAccept: true });\n\n// Await indefinitely\nawait forever();\n","link":"word_counter"}